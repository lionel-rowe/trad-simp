{"version":3,"sources":["../node_modules/opencc-data/data sync /^/.//.*/.txt$","convertCharset.ts","Form.tsx","utils.ts","WarnMsg.tsx","CharWithRuby.tsx","Output.tsx","ColorSchemeSwitcher.tsx","App.tsx","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","convertT2S","OpenCC","Converter","convertS2T","Form","fn","formState","setFormState","simpText","tradText","displayDuplicates","primaryCharSet","action","onSubmit","preventDefault","className","htmlFor","type","name","value","checked","onChange","key","currentTarget","onClick","a","t2s","s2t","sort","x","b","Number","WarnMsg","msg","CharWithRuby","primaryChar","secondaryChar","renderSecondaryChar","every","ch","Output","arr1","arr2","primaryText","secondaryText","useState","html","setHtml","renderedRef","useRef","useEffect","current","innerHTML","ref","Array","from","el","idx","toString","join","readOnly","select","initialVariant","localStorage","colorSchemeOverride","window","matchMedia","matches","ColorSchemeSwitcher","variant","setVariant","document","querySelector","href","body","setAttribute","changeVariant","v","aria-label","initialAppState","appState","JSON","stringify","parse","prop","TypeError","_e","App","length","rootElement","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5af92a6f.chunk.js","sourcesContent":["var map = {\n\t\"./HKVariants.txt\": 33,\n\t\"./HKVariantsRev.txt\": 34,\n\t\"./HKVariantsRevPhrases.txt\": 35,\n\t\"./JPShinjitaiCharacters.txt\": 36,\n\t\"./JPShinjitaiPhrases.txt\": 37,\n\t\"./JPVariants.txt\": 38,\n\t\"./JPVariantsRev.txt\": 39,\n\t\"./STCharacters.txt\": 40,\n\t\"./STPhrases.txt\": 41,\n\t\"./TSCharacters.txt\": 42,\n\t\"./TSPhrases.txt\": 43,\n\t\"./TWPhrasesIT.txt\": 44,\n\t\"./TWPhrasesName.txt\": 45,\n\t\"./TWPhrasesOther.txt\": 46,\n\t\"./TWPhrasesRev.txt\": 47,\n\t\"./TWVariants.txt\": 48,\n\t\"./TWVariantsRev.txt\": 49,\n\t\"./TWVariantsRevPhrases.txt\": 50\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 32;","// @ts-ignore\r\nimport OpenCC from 'opencc-js'\r\n\r\nconst convertT2S = OpenCC.Converter('t', 'cn')\r\nconst convertS2T = OpenCC.Converter('cn', 't')\r\n\r\nexport { convertT2S, convertS2T }\r\n","import React from 'react'\r\nimport { sortAsc } from './utils'\r\nimport { convertS2T, convertT2S } from './convertCharset'\r\nimport { Charset } from './types'\r\n\r\ninterface FormState {\r\n\tsimpText: string\r\n\ttradText: string\r\n\tdisplayDuplicates: boolean\r\n\tprimaryCharSet: Charset\r\n}\r\n\r\ninterface FormProps {\r\n\tformState: FormState\r\n\tsetFormState: (newState: FormState) => void\r\n}\r\n\r\nconst Form: React.FC<FormProps> = ({ formState, setFormState }) => {\r\n\tconst { simpText, tradText, displayDuplicates, primaryCharSet } = formState\r\n\r\n\treturn (\r\n\t\t<form action='' onSubmit={(e) => e.preventDefault()}>\r\n\t\t\t<div className='form-section'>\r\n\t\t\t\t<fieldset>\r\n\t\t\t\t\t<legend>Primary charset</legend>\r\n\t\t\t\t\t<label htmlFor='primary-charset-trad'>\r\n\t\t\t\t\t\tTraditional\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\t\tname='primary-charset'\r\n\t\t\t\t\t\t\tvalue='trad'\r\n\t\t\t\t\t\t\tid='primary-charset-trad'\r\n\t\t\t\t\t\t\tchecked={primaryCharSet === 'trad'}\r\n\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\tsetFormState({\r\n\t\t\t\t\t\t\t\t\t...formState,\r\n\t\t\t\t\t\t\t\t\tprimaryCharSet: 'trad',\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>{' '}\r\n\t\t\t\t\t<label htmlFor='primary-charset-simp'>\r\n\t\t\t\t\t\tSimplified\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\t\tname='primary-charset'\r\n\t\t\t\t\t\t\tvalue='simp'\r\n\t\t\t\t\t\t\tid='primary-charset-simp'\r\n\t\t\t\t\t\t\tchecked={primaryCharSet === 'simp'}\r\n\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\tsetFormState({\r\n\t\t\t\t\t\t\t\t\t...formState,\r\n\t\t\t\t\t\t\t\t\tprimaryCharSet: 'simp',\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</fieldset>\r\n\t\t\t</div>\r\n\r\n\t\t\t{[\r\n\t\t\t\t<div key='simp' className='form-section'>\r\n\t\t\t\t\t<label htmlFor='simp'>\r\n\t\t\t\t\t\tSimplified\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\tclassName='input'\r\n\t\t\t\t\t\t\tname='simp'\r\n\t\t\t\t\t\t\tid='simp'\r\n\t\t\t\t\t\t\tvalue={simpText}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tsetFormState({\r\n\t\t\t\t\t\t\t\t\t...formState,\r\n\t\t\t\t\t\t\t\t\tsimpText: e.currentTarget.value,\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\t\tconst t2s = await convertT2S\r\n\r\n\t\t\t\t\t\t\tsetFormState({\r\n\t\t\t\t\t\t\t\t...formState,\r\n\t\t\t\t\t\t\t\tsimpText: t2s(tradText),\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tGuess from traditional\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>,\r\n\t\t\t\t<div key='trad' className='form-section'>\r\n\t\t\t\t\t<label htmlFor='trad'>\r\n\t\t\t\t\t\tTraditional\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\tclassName='input'\r\n\t\t\t\t\t\t\tname='trad'\r\n\t\t\t\t\t\t\tid='trad'\r\n\t\t\t\t\t\t\tvalue={tradText}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tsetFormState({\r\n\t\t\t\t\t\t\t\t\t...formState,\r\n\t\t\t\t\t\t\t\t\ttradText: e.currentTarget.value,\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\t\tconst s2t = await convertS2T\r\n\r\n\t\t\t\t\t\t\tsetFormState({\r\n\t\t\t\t\t\t\t\t...formState,\r\n\t\t\t\t\t\t\t\ttradText: s2t(simpText),\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tGuess from simplified\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>,\r\n\t\t\t].sort(sortAsc((x) => x.key === primaryCharSet))}\r\n\r\n\t\t\t<div className='form-section'>\r\n\t\t\t\t<label htmlFor='display-duplicates'>\r\n\t\t\t\t\tInclude duplicates\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\tname='display-duplicates'\r\n\t\t\t\t\t\tid='display-duplicates'\r\n\t\t\t\t\t\tchecked={displayDuplicates}\r\n\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\tsetFormState({\r\n\t\t\t\t\t\t\t\t...formState,\r\n\t\t\t\t\t\t\t\tdisplayDuplicates: e.currentTarget.checked,\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default Form\r\n","const zip = (arr1: any[], arr2: any[]) => {\r\n\treturn arr1.map((el, idx) => [el, arr2[idx]])\r\n}\r\n\r\nconst sortAsc = (fn: (x: any) => any) => (a: any, b: any) =>\r\n\tNumber(fn(b)) - Number(fn(a))\r\n\r\nexport { zip, sortAsc }\r\n","import React from 'react'\r\n\r\ninterface WarnMsgProps {\r\n\tmsg: string\r\n}\r\n\r\nconst WarnMsg: React.FC<WarnMsgProps> = ({ msg }) => {\r\n\treturn <div className='warn-msg'>Warning: {msg}</div>\r\n}\r\n\r\nexport default WarnMsg\r\n","import React from 'react'\r\n\r\ninterface CharWithRubyProps {\r\n\tprimaryChar: string\r\n\tsecondaryChar: string\r\n\tdisplayDuplicates: boolean\r\n}\r\n\r\nconst CharWithRuby: React.FC<CharWithRubyProps> = ({\r\n\tprimaryChar,\r\n\tsecondaryChar,\r\n\tdisplayDuplicates,\r\n}) => {\r\n\tconst renderSecondaryChar =\r\n\t\tdisplayDuplicates || primaryChar !== secondaryChar\r\n\r\n\tif ([primaryChar, secondaryChar].every((ch) => ch === '\\n')) {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{'\\n'}\r\n\t\t\t\t<br />\r\n\t\t\t\t{'\\n'}\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\tif (!renderSecondaryChar) {\r\n\t\treturn <>{primaryChar}</>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ruby>\r\n\t\t\t\t{primaryChar}\r\n\t\t\t\t{renderSecondaryChar && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<rp>(</rp>\r\n\t\t\t\t\t\t<rt>{secondaryChar}</rt>\r\n\t\t\t\t\t\t<rp>)</rp>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</ruby>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default CharWithRuby\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport CharWithRuby from './CharWithRuby'\r\nimport { zip } from './utils'\r\n\r\ninterface OutputProps {\r\n\tprimaryText: string\r\n\tsecondaryText: string\r\n\tdisplayDuplicates: boolean\r\n}\r\n\r\nconst Output: React.FC<OutputProps> = ({\r\n\tprimaryText,\r\n\tsecondaryText,\r\n\tdisplayDuplicates,\r\n}) => {\r\n\tconst [html, setHtml] = useState('')\r\n\r\n\tconst renderedRef = useRef<HTMLDivElement>(null)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetHtml(renderedRef.current?.innerHTML || '')\r\n\t}, [primaryText, secondaryText, displayDuplicates])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<output>\r\n\t\t\t\t<div className='rendered' ref={renderedRef}>\r\n\t\t\t\t\t{zip(\r\n\t\t\t\t\t\tArray.from(primaryText),\r\n\t\t\t\t\t\tArray.from(secondaryText),\r\n\t\t\t\t\t).map(([primaryChar, secondaryChar], idx) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<CharWithRuby\r\n\t\t\t\t\t\t\t\tkey={[\r\n\t\t\t\t\t\t\t\t\tidx.toString(),\r\n\t\t\t\t\t\t\t\t\tprimaryChar,\r\n\t\t\t\t\t\t\t\t\tsecondaryChar,\r\n\t\t\t\t\t\t\t\t].join('')}\r\n\t\t\t\t\t\t\t\tprimaryChar={primaryChar}\r\n\t\t\t\t\t\t\t\tsecondaryChar={secondaryChar}\r\n\t\t\t\t\t\t\t\tdisplayDuplicates={displayDuplicates}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</output>\r\n\r\n\t\t\t<h3>HTML</h3>\r\n\r\n\t\t\t<output>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tclassName='html-src'\r\n\t\t\t\t\treadOnly\r\n\t\t\t\t\tvalue={html}\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\te.currentTarget.select()\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</output>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Output\r\n","import React, { useState, useEffect } from 'react'\n\ntype Variant = 'dark' | 'light'\n\nconst changeVariant = (variant: Variant) => {\n\t;(document.querySelector(\n\t\t'#water-css',\n\t) as HTMLLinkElement).href = `https://cdn.jsdelivr.net/gh/kognise/water.css@1.4.0/dist/${variant}.min.css`\n\n\tdocument.body.setAttribute('class', variant)\n}\n\nconst useDarkVariant = () => {\n\treturn localStorage.colorSchemeOverride\n\t\t? localStorage.colorSchemeOverride === 'dark'\n\t\t: window.matchMedia &&\n\t\t\t\tmatchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst initialVariant: Variant = useDarkVariant() ? 'dark' : 'light'\n\nconst ColorSchemeSwitcher: React.FC = () => {\n\tconst [variant, setVariant] = useState<Variant>(initialVariant)\n\n\tuseEffect(() => {\n\t\tlocalStorage.colorSchemeOverride = variant\n\n\t\tchangeVariant(variant)\n\t}, [variant])\n\n\treturn (\n\t\t<div className='color-scheme-switcher-container'>\n\t\t\t<button\n\t\t\t\tonClick={() =>\n\t\t\t\t\tsetVariant((v) => (v === 'dark' ? 'light' : 'dark'))\n\t\t\t\t}\n\t\t\t\tclassName='color-scheme-switcher'\n\t\t\t\taria-label='Switch color scheme'\n\t\t\t>\n\t\t\t\t{variant === 'dark' ? '🌞' : '🌛'}\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default ColorSchemeSwitcher\n","import React, { useState, useEffect } from 'react'\nimport './styles.scss'\n\nimport Form from './Form'\nimport WarnMsg from './WarnMsg'\nimport Output from './Output'\nimport { Charset } from './types'\nimport ColorSchemeSwitcher from './ColorSchemeSwitcher'\n\ninterface AppState {\n\ttradText: string\n\tsimpText: string\n\tdisplayDuplicates: boolean\n\tprimaryCharSet: Charset\n}\n\n// 发行发型、干燥干部、天干地支、皇后之后、预卜萝卜、\n// 才是天才、了解不了、丑角好丑、手表表现\n\nconst initialAppState: AppState = {\n\ttradText: `北冥有魚，其名為鯤。\n鯤之大，不知其幾仟裏也。\n化而為鳥，其名為鵬。\n鵬之背，不知其幾仟裏也，怒而飛，其翼若垂天之雲。\n是鳥也，海運則將徙於南冥。`,\n\tsimpText: `北冥有鱼，其名为鲲。\n鲲之大，不知其几千里也。\n化而为鸟，其名为鹏。\n鹏之背，不知其几千里也，怒而飞，其翼若垂天之云。\n是鸟也，海运则将徙于南冥。`,\n\tdisplayDuplicates: false,\n\tprimaryCharSet: 'trad',\n}\n\nif (!localStorage.appState) {\n\tlocalStorage.appState = JSON.stringify(initialAppState)\n}\n\nlet appState = {} as AppState\n\ntry {\n\tappState = JSON.parse(localStorage.appState) as AppState\n\n\tif (\n\t\t!([\n\t\t\t['tradText', 'string'],\n\t\t\t['simpText', 'string'],\n\t\t\t['displayDuplicates', 'boolean'],\n\t\t\t['primaryCharSet', 'string'],\n\t\t] as const).every(([prop, type]) => typeof appState[prop] === type)\n\t) {\n\t\tthrow new TypeError()\n\t}\n} catch (_e) {\n\t// empty or corrupted state - reinitialize\n\n\tappState = initialAppState\n}\n\nconst App: React.FC = () => {\n\tconst [formState, setFormState] = useState(appState)\n\n\tconst { simpText, tradText, displayDuplicates, primaryCharSet } = formState\n\n\tconst primaryText = primaryCharSet === 'simp' ? simpText : tradText\n\tconst secondaryText = primaryCharSet === 'simp' ? tradText : simpText\n\n\tuseEffect(() => {\n\t\tlocalStorage.appState = JSON.stringify(formState)\n\t}, [formState])\n\n\treturn (\n\t\t<div className='container'>\n\t\t\t<ColorSchemeSwitcher />\n\t\t\t<h1>Traditional ⇄ simplified ruby-text generator</h1>\n\n\t\t\t<Form formState={formState} setFormState={setFormState} />\n\t\t\t{Array.from(primaryText).length !==\n\t\t\t\tArray.from(secondaryText).length && (\n\t\t\t\t<WarnMsg\n\t\t\t\t\tmsg={\n\t\t\t\t\t\t'Length of simplified and traditional input are different — please check results.'\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<h2>Output</h2>\n\t\t\t<Output\n\t\t\t\tprimaryText={primaryText}\n\t\t\t\tsecondaryText={secondaryText}\n\t\t\t\tdisplayDuplicates={displayDuplicates}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\trootElement,\n)\n"],"sourceRoot":""}